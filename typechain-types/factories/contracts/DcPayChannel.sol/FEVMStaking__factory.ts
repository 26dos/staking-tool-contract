/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FEVMStaking,
  FEVMStakingInterface,
} from "../../../contracts/DcPayChannel.sol/FEVMStaking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "FIL_PER_10T",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_TIME_20_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_TIME_40_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dcAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeType",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108d6806100206000396000f3fe6080604052600436106100c65760003560e01c8063a69df4b51161007f578063d1d7e10a11610059578063d1d7e10a14610272578063e30c39781461028e578063f158adf2146102ac578063f2fde38b146102c357600080fd5b8063a69df4b5146101d4578063bb224d6e146101e9578063c3453153146101ff57600080fd5b806316934fc4146100d257806361cbfa501461013e578063715018a61461016357806379ba50971461017a5780637b0472f01461018f5780638da5cb5b146101a257600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506101176100ed3660046107df565b60976020526000908152604090208054600182015460028301546003909301549192909160ff1684565b60408051948552602085019390935291830152151560608201526080015b60405180910390f35b34801561014a57600080fd5b506101556234bc0081565b604051908152602001610135565b34801561016f57600080fd5b506101786102e3565b005b34801561018657600080fd5b506101786102f7565b61017861019d36600461080f565b610376565b3480156101ae57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610135565b3480156101e057600080fd5b5061017861052c565b3480156101f557600080fd5b5061015561080081565b34801561020b57600080fd5b5061011761021a3660046107df565b6001600160a01b0316600090815260976020908152604091829020825160808101845281548082526001830154938201849052600283015494820185905260039092015460ff16151560609091018190529093919291565b34801561027e57600080fd5b50610155670de0b6b3a764000081565b34801561029a57600080fd5b506065546001600160a01b03166101bc565b3480156102b857600080fd5b50610155621a5e0081565b3480156102cf57600080fd5b506101786102de3660046107df565b6106ae565b6102eb61071f565b6102f56000610779565b565b60655433906001600160a01b0316811461036a5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b61037381610779565b50565b8015806103835750806001145b6103c45760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207374616b65207479706560701b6044820152606401610361565b6108008211156104075760405162461bcd60e51b815260206004820152600e60248201526d45786365656473206d617820444360901b6044820152606401610361565b60008115610418576234bc0061041d565b621a5e005b90506000670de0b6b3a7640000610435600a86610847565b61043f9190610869565b9050803410156104915760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742046494c20666f72207374616b696e67000000006044820152606401610361565b6040805160808101825234808252426020808401918252838501878152600160608601818152336000818152609786528990209751885594519187019190915590516002860155516003909401805460ff191694151594909417909355835191825291810185905290917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a250505050565b336000908152609760205260409020600381015460ff166105815760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b6044820152606401610361565b806002015481600101546105959190610888565b4210156105dc5760405162461bcd60e51b815260206004820152601560248201527414dd185ad9481a5cc81cdd1a5b1b081b1bd8dad959605a1b6044820152606401610361565b805460038201805460ff19169055604051600090339083908381818185875af1925050503d806000811461062c576040519150601f19603f3d011682016040523d82523d6000602084013e610631565b606091505b50509050806106745760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610361565b60405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a2505050565b6106b661071f565b606580546001600160a01b0383166001600160a01b031990911681179091556106e76033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6033546001600160a01b031633146102f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610361565b606580546001600160a01b031916905561037381603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156107f157600080fd5b81356001600160a01b038116811461080857600080fd5b9392505050565b6000806040838503121561082257600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60008261086457634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561088357610883610831565b500290565b6000821982111561089b5761089b610831565b50019056fea264697066735822122008a16f8dcdac99daa1c4e6ea783ae53c4cb8f3259da9ae51967ae2cdf347a9a564736f6c63430008090033";

type FEVMStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FEVMStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FEVMStaking__factory extends ContractFactory {
  constructor(...args: FEVMStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FEVMStaking> {
    return super.deploy(overrides || {}) as Promise<FEVMStaking>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FEVMStaking {
    return super.attach(address) as FEVMStaking;
  }
  override connect(signer: Signer): FEVMStaking__factory {
    return super.connect(signer) as FEVMStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FEVMStakingInterface {
    return new utils.Interface(_abi) as FEVMStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FEVMStaking {
    return new Contract(address, _abi, signerOrProvider) as FEVMStaking;
  }
}
